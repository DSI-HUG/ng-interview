
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$palette: (
    50: #d6ebff,
    100: #8ac4ff,
    200: #52a8ff,
    300: #0a85ff,
    400: #0075eb,
    500: #0066cc,
    600: #0057ad,
    700: #00478f,
    800: #003870,
    900: #002952,
    A100: #cce5ff,
    A200: #66b2ff,
    A400: #007fff,
    A700: #0073e6,
    contrast: (
        50: rgba(black, 0.87),
        100: rgba(black, 0.87),
        200: rgba(black, 0.87),
        300: white,
        400: white,
        500: white,
        600: white,
        700: white,
        800: white,
        900: white,
        A100: rgba(black, 0.87),
        A200: rgba(black, 0.87),
        A400: white,
        A700: white,
    ),
);
$primary: mat.define-palette($palette);
$accent: mat.define-palette($palette);

// The warn palette is optional (defaults to red).
$warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$theme: mat.define-light-theme((
  color: (
    primary: $primary,
    accent: $accent,
    warn: $warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($theme);

// Application themes
@mixin elements-theme($theme) {
    $accent: map-get($theme, accent);
    $primary: map-get($theme, primary);
    $foreground: map-get($theme, foreground);

    a,
    a:active,
    a:focus,
    a:visited {
        color: mat.get-color-from-palette($accent, A400);
        text-decoration: none;
    }

    a:hover {
        text-decoration: underline;
    }

    blockquote {
        background: mat.get-color-from-palette($primary, 300, 0.14);
        border-left: 4px solid mat.get-color-from-palette($accent);
        border-radius: 4px;
        color: soften-color(mat.get-color-from-palette($foreground, base), 40%);
        margin: 20px 0;
        padding: 1px 20px;
    }

    code:not([class*="language-"]) {
        background: mat.get-color-from-palette($foreground, secondary-text, 0.07);
        border-radius: 3px;
        font-size: 0.94em;
        padding: 0px 6px 2px;
    }

    hr {
        border-color: mat.get-color-from-palette($foreground, divider);
        border-style: solid;
        border-width: 1px 0 0 0;
    }

    table {
        th {
            color: mat.get-color-from-palette($foreground, secondary-text);
        }

        td,
        th {
            border-bottom-color: mat.get-color-from-palette($foreground, divider);
        }
    }
}
@mixin app-theme() {
    $font-family: "Roboto", "Helvetica Neue", sans-serif;
    $mat-typography: mat.define-legacy-typography-config($font-family);
    body {
        font-family: $font-family;
    }
}

@include app-theme();
@include elements-theme($theme);
